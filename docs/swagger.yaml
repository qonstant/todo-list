definitions:
  db.Task:
    properties:
      active_at:
        type: string
      created_at:
        type: string
      done:
        type: boolean
      id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
    type: object
  http.createTaskInput:
    properties:
      active_at:
        type: string
      done:
        type: boolean
      title:
        type: string
    type: object
  http.updateTaskInput:
    properties:
      active_at:
        type: string
      done:
        type: boolean
      title:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/todo-list/tasks:
    get:
      description: List all tasks
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Task'
            type: array
        "500":
          description: Error retrieving tasks
          schema:
            type: string
      summary: List all tasks
      tags:
      - Tasks
    post:
      consumes:
      - application/json
      description: Create a new task
      parameters:
      - description: Task Input
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/http.createTaskInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/db.Task'
        "400":
          description: Invalid input
          schema:
            type: string
        "500":
          description: Error creating task
          schema:
            type: string
      summary: Create a new task
      tags:
      - Tasks
  /api/todo-list/tasks/{id}:
    delete:
      description: Delete a task
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid task ID
          schema:
            type: string
        "500":
          description: Error deleting task
          schema:
            type: string
      summary: Delete a task
      tags:
      - Tasks
    put:
      consumes:
      - application/json
      description: Update an existing task
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      - description: Task Input
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/http.updateTaskInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Task'
        "400":
          description: Invalid input
          schema:
            type: string
        "500":
          description: Error updating task
          schema:
            type: string
      summary: Update an existing task
      tags:
      - Tasks
  /api/todo-list/tasks/{id}/done:
    put:
      description: Mark a task as done
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Task'
        "400":
          description: Invalid task ID
          schema:
            type: string
        "500":
          description: Error marking task as done
          schema:
            type: string
      summary: Mark a task as done
      tags:
      - Tasks
swagger: "2.0"
